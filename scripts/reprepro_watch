#!/usr/bin/env python
"""
reprepro_watch <incoming_directory>
"""

import fileinput
import os
import re
import sys

from clint.command import Command
from reprepro.watcher import Watcher

GPG_AGENT_INFO_PATH = '/var/run/reprepro_watch/gpg-agent.env'


class RepreproWatch(Command):
    def __init__(self):
        super(RepreproWatch, self).__init__()

        self.watcher = None

    def _check_gpg_agent_info(self):
        # see if there is a gpg agent environment file
        gpg_agent_info_path = os.environ.get('GPG_AGENT_INFO_PATH', GPG_AGENT_INFO_PATH)
        self.logger.debug('checking GPG agent info at {}'.format(gpg_agent_info_path))

        if os.path.exists(gpg_agent_info_path):
            for line in fileinput.input(gpg_agent_info_path):
                key, val = line.strip().split('=')
                os.environ[key] = val
            fileinput.close()

    def quit(self):
        self.watcher.stop()

    def run(self):
        if not len(self.remaining_args):
            self.parser.print_help()
            return '\nERROR: incoming directory not given'

        self._check_gpg_agent_info()

        # make sure GPG agent is running or else refuse to start
        if 'GPG_AGENT_INFO' not in os.environ:
            return 'ERROR: GPG_AGENT_INFO is not set in environment'

        incoming_directory = self.remaining_args[0]

        self.logger.info("Incoming directory: %s" % (incoming_directory,))

        self.watcher = Watcher(incoming_directory, logger=self.logger)

        while True:
            self.watcher.loop()


if __name__ == '__main__':
    command = RepreproWatch()

    try:
        sys.exit(command.run())
    except KeyboardInterrupt:
        command.quit()
